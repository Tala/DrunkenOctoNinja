/*
    Copyright (C) 2014 Parrot SA

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions
    are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in
      the documentation and/or other materials provided with the 
      distribution.
    * Neither the name of Parrot nor the names
      of its contributors may be used to endorse or promote products
      derived from this software without specific prior written
      permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
    FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
    COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
    BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
    OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED 
    AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
    OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
    OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
    SUCH DAMAGE.
*/
/**********************************************************
 *            AUTOGENERATED FILE                          *
 *             DO NOT MODIFY IT                           *
 *                                                        *
 * To add new commands :                                  *
 *  - Modify ../Xml/commands.xml file                     *
 *  - Re-run generateDeviceControllerCategories.py script *
 *                                                        *
 **********************************************************/
#import <libARSAL/ARSAL.h>
#import "DeviceControllerProtected.h"
#import "JumpingSumoDeviceController+libARCommands.h"

NSString *const JumpingSumoDeviceControllerPilotingStatePostureChangedNotification = @"JumpingSumoDeviceControllerPilotingStatePostureChangedNotification";
NSString *const JumpingSumoDeviceControllerPilotingStatePostureChangedNotificationStateKey = @"JumpingSumoDeviceControllerPilotingStatePostureChangedNotificationStateKey";
NSString *const JumpingSumoDeviceControllerPilotingStateAlertStateChangedNotification = @"JumpingSumoDeviceControllerPilotingStateAlertStateChangedNotification";
NSString *const JumpingSumoDeviceControllerPilotingStateAlertStateChangedNotificationStateKey = @"JumpingSumoDeviceControllerPilotingStateAlertStateChangedNotificationStateKey";
NSString *const JumpingSumoDeviceControllerAnimationsStateJumpLoadChangedNotification = @"JumpingSumoDeviceControllerAnimationsStateJumpLoadChangedNotification";
NSString *const JumpingSumoDeviceControllerAnimationsStateJumpLoadChangedNotificationStateKey = @"JumpingSumoDeviceControllerAnimationsStateJumpLoadChangedNotificationStateKey";
NSString *const JumpingSumoDeviceControllerSettingsStateProductGPSVersionChangedNotification = @"JumpingSumoDeviceControllerSettingsStateProductGPSVersionChangedNotification";
NSString *const JumpingSumoDeviceControllerSettingsStateProductGPSVersionChangedNotificationSoftwareKey = @"JumpingSumoDeviceControllerSettingsStateProductGPSVersionChangedNotificationSoftwareKey";
NSString *const JumpingSumoDeviceControllerSettingsStateProductGPSVersionChangedNotificationHardwareKey = @"JumpingSumoDeviceControllerSettingsStateProductGPSVersionChangedNotificationHardwareKey";
NSString *const JumpingSumoDeviceControllerMediaRecordStatePictureStateChangedNotification = @"JumpingSumoDeviceControllerMediaRecordStatePictureStateChangedNotification";
NSString *const JumpingSumoDeviceControllerMediaRecordStatePictureStateChangedNotificationStateKey = @"JumpingSumoDeviceControllerMediaRecordStatePictureStateChangedNotificationStateKey";
NSString *const JumpingSumoDeviceControllerMediaRecordStatePictureStateChangedNotificationMass_storage_idKey = @"JumpingSumoDeviceControllerMediaRecordStatePictureStateChangedNotificationMass_storage_idKey";
NSString *const JumpingSumoDeviceControllerMediaRecordStateVideoStateChangedNotification = @"JumpingSumoDeviceControllerMediaRecordStateVideoStateChangedNotification";
NSString *const JumpingSumoDeviceControllerMediaRecordStateVideoStateChangedNotificationStateKey = @"JumpingSumoDeviceControllerMediaRecordStateVideoStateChangedNotificationStateKey";
NSString *const JumpingSumoDeviceControllerMediaRecordStateVideoStateChangedNotificationMass_storage_idKey = @"JumpingSumoDeviceControllerMediaRecordStateVideoStateChangedNotificationMass_storage_idKey";
NSString *const JumpingSumoDeviceControllerNetworkSettingsStateWifiSelectionChangedNotification = @"JumpingSumoDeviceControllerNetworkSettingsStateWifiSelectionChangedNotification";
NSString *const JumpingSumoDeviceControllerNetworkSettingsStateWifiSelectionChangedNotificationTypeKey = @"JumpingSumoDeviceControllerNetworkSettingsStateWifiSelectionChangedNotificationTypeKey";
NSString *const JumpingSumoDeviceControllerNetworkSettingsStateWifiSelectionChangedNotificationBandKey = @"JumpingSumoDeviceControllerNetworkSettingsStateWifiSelectionChangedNotificationBandKey";
NSString *const JumpingSumoDeviceControllerNetworkSettingsStateWifiSelectionChangedNotificationChannelKey = @"JumpingSumoDeviceControllerNetworkSettingsStateWifiSelectionChangedNotificationChannelKey";
NSString *const JumpingSumoDeviceControllerNetworkStateWifiScanListChangedNotification = @"JumpingSumoDeviceControllerNetworkStateWifiScanListChangedNotification";
NSString *const JumpingSumoDeviceControllerNetworkStateWifiScanListChangedNotificationSsidKey = @"JumpingSumoDeviceControllerNetworkStateWifiScanListChangedNotificationSsidKey";
NSString *const JumpingSumoDeviceControllerNetworkStateWifiScanListChangedNotificationRssiKey = @"JumpingSumoDeviceControllerNetworkStateWifiScanListChangedNotificationRssiKey";
NSString *const JumpingSumoDeviceControllerNetworkStateWifiScanListChangedNotificationBandKey = @"JumpingSumoDeviceControllerNetworkStateWifiScanListChangedNotificationBandKey";
NSString *const JumpingSumoDeviceControllerNetworkStateWifiScanListChangedNotificationChannelKey = @"JumpingSumoDeviceControllerNetworkStateWifiScanListChangedNotificationChannelKey";
NSString *const JumpingSumoDeviceControllerNetworkStateAllWifiScanChangedNotification = @"JumpingSumoDeviceControllerNetworkStateAllWifiScanChangedNotification";
NSString *const JumpingSumoDeviceControllerNetworkStateWifiAuthChannelListChangedNotification = @"JumpingSumoDeviceControllerNetworkStateWifiAuthChannelListChangedNotification";
NSString *const JumpingSumoDeviceControllerNetworkStateWifiAuthChannelListChangedNotificationBandKey = @"JumpingSumoDeviceControllerNetworkStateWifiAuthChannelListChangedNotificationBandKey";
NSString *const JumpingSumoDeviceControllerNetworkStateWifiAuthChannelListChangedNotificationChannelKey = @"JumpingSumoDeviceControllerNetworkStateWifiAuthChannelListChangedNotificationChannelKey";
NSString *const JumpingSumoDeviceControllerNetworkStateWifiAuthChannelListChangedNotificationIn_or_outKey = @"JumpingSumoDeviceControllerNetworkStateWifiAuthChannelListChangedNotificationIn_or_outKey";
NSString *const JumpingSumoDeviceControllerNetworkStateAllWifiAuthChannelChangedNotification = @"JumpingSumoDeviceControllerNetworkStateAllWifiAuthChannelChangedNotification";
NSString *const JumpingSumoDeviceControllerNetworkStateLinkQualityChangedNotification = @"JumpingSumoDeviceControllerNetworkStateLinkQualityChangedNotification";
NSString *const JumpingSumoDeviceControllerNetworkStateLinkQualityChangedNotificationQualityKey = @"JumpingSumoDeviceControllerNetworkStateLinkQualityChangedNotificationQualityKey";
NSString *const JumpingSumoDeviceControllerAudioSettingsStateMasterVolumeChangedNotification = @"JumpingSumoDeviceControllerAudioSettingsStateMasterVolumeChangedNotification";
NSString *const JumpingSumoDeviceControllerAudioSettingsStateMasterVolumeChangedNotificationVolumeKey = @"JumpingSumoDeviceControllerAudioSettingsStateMasterVolumeChangedNotificationVolumeKey";
NSString *const JumpingSumoDeviceControllerAudioSettingsStateThemeChangedNotification = @"JumpingSumoDeviceControllerAudioSettingsStateThemeChangedNotification";
NSString *const JumpingSumoDeviceControllerAudioSettingsStateThemeChangedNotificationThemeKey = @"JumpingSumoDeviceControllerAudioSettingsStateThemeChangedNotificationThemeKey";
NSString *const JumpingSumoDeviceControllerRoadPlanStateScriptMetadataListChangedNotification = @"JumpingSumoDeviceControllerRoadPlanStateScriptMetadataListChangedNotification";
NSString *const JumpingSumoDeviceControllerRoadPlanStateScriptMetadataListChangedNotificationUuidKey = @"JumpingSumoDeviceControllerRoadPlanStateScriptMetadataListChangedNotificationUuidKey";
NSString *const JumpingSumoDeviceControllerRoadPlanStateScriptMetadataListChangedNotificationVersionKey = @"JumpingSumoDeviceControllerRoadPlanStateScriptMetadataListChangedNotificationVersionKey";
NSString *const JumpingSumoDeviceControllerRoadPlanStateScriptMetadataListChangedNotificationProductKey = @"JumpingSumoDeviceControllerRoadPlanStateScriptMetadataListChangedNotificationProductKey";
NSString *const JumpingSumoDeviceControllerRoadPlanStateScriptMetadataListChangedNotificationNameKey = @"JumpingSumoDeviceControllerRoadPlanStateScriptMetadataListChangedNotificationNameKey";
NSString *const JumpingSumoDeviceControllerRoadPlanStateScriptMetadataListChangedNotificationLastModifiedKey = @"JumpingSumoDeviceControllerRoadPlanStateScriptMetadataListChangedNotificationLastModifiedKey";
NSString *const JumpingSumoDeviceControllerRoadPlanStateAllScriptsMetadataChangedNotification = @"JumpingSumoDeviceControllerRoadPlanStateAllScriptsMetadataChangedNotification";
NSString *const JumpingSumoDeviceControllerRoadPlanStateScriptUploadChangedNotification = @"JumpingSumoDeviceControllerRoadPlanStateScriptUploadChangedNotification";
NSString *const JumpingSumoDeviceControllerRoadPlanStateScriptUploadChangedNotificationResultCodeKey = @"JumpingSumoDeviceControllerRoadPlanStateScriptUploadChangedNotificationResultCodeKey";
NSString *const JumpingSumoDeviceControllerRoadPlanStateScriptDeleteChangedNotification = @"JumpingSumoDeviceControllerRoadPlanStateScriptDeleteChangedNotification";
NSString *const JumpingSumoDeviceControllerRoadPlanStateScriptDeleteChangedNotificationResultCodeKey = @"JumpingSumoDeviceControllerRoadPlanStateScriptDeleteChangedNotificationResultCodeKey";
NSString *const JumpingSumoDeviceControllerRoadPlanStatePlayScriptChangedNotification = @"JumpingSumoDeviceControllerRoadPlanStatePlayScriptChangedNotification";
NSString *const JumpingSumoDeviceControllerRoadPlanStatePlayScriptChangedNotificationResultCodeKey = @"JumpingSumoDeviceControllerRoadPlanStatePlayScriptChangedNotificationResultCodeKey";
NSString *const JumpingSumoDeviceControllerSpeedSettingsStateOutdoorChangedNotification = @"JumpingSumoDeviceControllerSpeedSettingsStateOutdoorChangedNotification";
NSString *const JumpingSumoDeviceControllerSpeedSettingsStateOutdoorChangedNotificationOutdoorKey = @"JumpingSumoDeviceControllerSpeedSettingsStateOutdoorChangedNotificationOutdoorKey";
NSString *const JumpingSumoDeviceControllerMediaStreamingStateVideoEnableChangedNotification = @"JumpingSumoDeviceControllerMediaStreamingStateVideoEnableChangedNotification";
NSString *const JumpingSumoDeviceControllerMediaStreamingStateVideoEnableChangedNotificationEnabledKey = @"JumpingSumoDeviceControllerMediaStreamingStateVideoEnableChangedNotificationEnabledKey";

@implementation JumpingSumoDeviceController (libARCommands)
const char *JumpingSumoDeviceController_TAG = "JumpingSumo DeviceController";

#pragma mark static C callback
static void jumpingsumo_pilotingstate_posturechanged_callback(eARCOMMANDS_JUMPINGSUMO_PILOTINGSTATE_POSTURECHANGED_STATE state, void *custom)
{
    JumpingSumoDeviceController *self = (__bridge JumpingSumoDeviceController*)custom;
    NSDictionary* dict = [NSDictionary dictionaryWithObjects:@[[NSNumber numberWithInt:state]] forKeys:@[JumpingSumoDeviceControllerPilotingStatePostureChangedNotificationStateKey]];
    [self.privateNotificationsDictionary setObject:dict forKey:JumpingSumoDeviceControllerPilotingStatePostureChangedNotification];
    [[NSNotificationCenter defaultCenter] postNotificationName:DeviceControllerNotificationsDictionaryChanged object:self userInfo:[NSDictionary dictionaryWithObject:dict forKey:JumpingSumoDeviceControllerPilotingStatePostureChangedNotification]];
    [[NSNotificationCenter defaultCenter] postNotificationName:JumpingSumoDeviceControllerPilotingStatePostureChangedNotification object:self userInfo:dict];
}

static void jumpingsumo_pilotingstate_alertstatechanged_callback(eARCOMMANDS_JUMPINGSUMO_PILOTINGSTATE_ALERTSTATECHANGED_STATE state, void *custom)
{
    JumpingSumoDeviceController *self = (__bridge JumpingSumoDeviceController*)custom;
    NSDictionary* dict = [NSDictionary dictionaryWithObjects:@[[NSNumber numberWithInt:state]] forKeys:@[JumpingSumoDeviceControllerPilotingStateAlertStateChangedNotificationStateKey]];
    [self.privateNotificationsDictionary setObject:dict forKey:JumpingSumoDeviceControllerPilotingStateAlertStateChangedNotification];
    [[NSNotificationCenter defaultCenter] postNotificationName:DeviceControllerNotificationsDictionaryChanged object:self userInfo:[NSDictionary dictionaryWithObject:dict forKey:JumpingSumoDeviceControllerPilotingStateAlertStateChangedNotification]];
    [[NSNotificationCenter defaultCenter] postNotificationName:JumpingSumoDeviceControllerPilotingStateAlertStateChangedNotification object:self userInfo:dict];
}

static void jumpingsumo_animationsstate_jumploadchanged_callback(eARCOMMANDS_JUMPINGSUMO_ANIMATIONSSTATE_JUMPLOADCHANGED_STATE state, void *custom)
{
    JumpingSumoDeviceController *self = (__bridge JumpingSumoDeviceController*)custom;
    NSDictionary* dict = [NSDictionary dictionaryWithObjects:@[[NSNumber numberWithInt:state]] forKeys:@[JumpingSumoDeviceControllerAnimationsStateJumpLoadChangedNotificationStateKey]];
    [self.privateNotificationsDictionary setObject:dict forKey:JumpingSumoDeviceControllerAnimationsStateJumpLoadChangedNotification];
    [[NSNotificationCenter defaultCenter] postNotificationName:DeviceControllerNotificationsDictionaryChanged object:self userInfo:[NSDictionary dictionaryWithObject:dict forKey:JumpingSumoDeviceControllerAnimationsStateJumpLoadChangedNotification]];
    [[NSNotificationCenter defaultCenter] postNotificationName:JumpingSumoDeviceControllerAnimationsStateJumpLoadChangedNotification object:self userInfo:dict];
}

static void jumpingsumo_settingsstate_productgpsversionchanged_callback(char * software, char * hardware, void *custom)
{
    JumpingSumoDeviceController *self = (__bridge JumpingSumoDeviceController*)custom;
    NSDictionary* dict = [NSDictionary dictionaryWithObjects:@[[NSString stringWithCString:software encoding:NSUTF8StringEncoding], [NSString stringWithCString:hardware encoding:NSUTF8StringEncoding]] forKeys:@[JumpingSumoDeviceControllerSettingsStateProductGPSVersionChangedNotificationSoftwareKey, JumpingSumoDeviceControllerSettingsStateProductGPSVersionChangedNotificationHardwareKey]];
    [self.privateNotificationsDictionary setObject:dict forKey:JumpingSumoDeviceControllerSettingsStateProductGPSVersionChangedNotification];
    [[NSNotificationCenter defaultCenter] postNotificationName:DeviceControllerNotificationsDictionaryChanged object:self userInfo:[NSDictionary dictionaryWithObject:dict forKey:JumpingSumoDeviceControllerSettingsStateProductGPSVersionChangedNotification]];
    [[NSNotificationCenter defaultCenter] postNotificationName:JumpingSumoDeviceControllerSettingsStateProductGPSVersionChangedNotification object:self userInfo:dict];
}

static void jumpingsumo_mediarecordstate_picturestatechanged_callback(uint8_t state, uint8_t mass_storage_id, void *custom)
{
    JumpingSumoDeviceController *self = (__bridge JumpingSumoDeviceController*)custom;
    NSDictionary* dict = [NSDictionary dictionaryWithObjects:@[[NSNumber numberWithUnsignedChar:state], [NSNumber numberWithUnsignedChar:mass_storage_id]] forKeys:@[JumpingSumoDeviceControllerMediaRecordStatePictureStateChangedNotificationStateKey, JumpingSumoDeviceControllerMediaRecordStatePictureStateChangedNotificationMass_storage_idKey]];
    [self.privateNotificationsDictionary setObject:dict forKey:JumpingSumoDeviceControllerMediaRecordStatePictureStateChangedNotification];
    [[NSNotificationCenter defaultCenter] postNotificationName:DeviceControllerNotificationsDictionaryChanged object:self userInfo:[NSDictionary dictionaryWithObject:dict forKey:JumpingSumoDeviceControllerMediaRecordStatePictureStateChangedNotification]];
    [[NSNotificationCenter defaultCenter] postNotificationName:JumpingSumoDeviceControllerMediaRecordStatePictureStateChangedNotification object:self userInfo:dict];
}

static void jumpingsumo_mediarecordstate_videostatechanged_callback(eARCOMMANDS_JUMPINGSUMO_MEDIARECORDSTATE_VIDEOSTATECHANGED_STATE state, uint8_t mass_storage_id, void *custom)
{
    JumpingSumoDeviceController *self = (__bridge JumpingSumoDeviceController*)custom;
    NSDictionary* dict = [NSDictionary dictionaryWithObjects:@[[NSNumber numberWithInt:state], [NSNumber numberWithUnsignedChar:mass_storage_id]] forKeys:@[JumpingSumoDeviceControllerMediaRecordStateVideoStateChangedNotificationStateKey, JumpingSumoDeviceControllerMediaRecordStateVideoStateChangedNotificationMass_storage_idKey]];
    [self.privateNotificationsDictionary setObject:dict forKey:JumpingSumoDeviceControllerMediaRecordStateVideoStateChangedNotification];
    [[NSNotificationCenter defaultCenter] postNotificationName:DeviceControllerNotificationsDictionaryChanged object:self userInfo:[NSDictionary dictionaryWithObject:dict forKey:JumpingSumoDeviceControllerMediaRecordStateVideoStateChangedNotification]];
    [[NSNotificationCenter defaultCenter] postNotificationName:JumpingSumoDeviceControllerMediaRecordStateVideoStateChangedNotification object:self userInfo:dict];
}

static void jumpingsumo_networksettingsstate_wifiselectionchanged_callback(eARCOMMANDS_JUMPINGSUMO_NETWORKSETTINGSSTATE_WIFISELECTIONCHANGED_TYPE type, eARCOMMANDS_JUMPINGSUMO_NETWORKSETTINGSSTATE_WIFISELECTIONCHANGED_BAND band, uint8_t channel, void *custom)
{
    JumpingSumoDeviceController *self = (__bridge JumpingSumoDeviceController*)custom;
    NSDictionary* dict = [NSDictionary dictionaryWithObjects:@[[NSNumber numberWithInt:type], [NSNumber numberWithInt:band], [NSNumber numberWithUnsignedChar:channel]] forKeys:@[JumpingSumoDeviceControllerNetworkSettingsStateWifiSelectionChangedNotificationTypeKey, JumpingSumoDeviceControllerNetworkSettingsStateWifiSelectionChangedNotificationBandKey, JumpingSumoDeviceControllerNetworkSettingsStateWifiSelectionChangedNotificationChannelKey]];
    [self.privateNotificationsDictionary setObject:dict forKey:JumpingSumoDeviceControllerNetworkSettingsStateWifiSelectionChangedNotification];
    [[NSNotificationCenter defaultCenter] postNotificationName:DeviceControllerNotificationsDictionaryChanged object:self userInfo:[NSDictionary dictionaryWithObject:dict forKey:JumpingSumoDeviceControllerNetworkSettingsStateWifiSelectionChangedNotification]];
    [[NSNotificationCenter defaultCenter] postNotificationName:JumpingSumoDeviceControllerNetworkSettingsStateWifiSelectionChangedNotification object:self userInfo:dict];
}

static void jumpingsumo_networkstate_wifiscanlistchanged_callback(char * ssid, int16_t rssi, eARCOMMANDS_JUMPINGSUMO_NETWORKSTATE_WIFISCANLISTCHANGED_BAND band, uint8_t channel, void *custom)
{
    JumpingSumoDeviceController *self = (__bridge JumpingSumoDeviceController*)custom;
    NSDictionary* dict = [NSDictionary dictionaryWithObjects:@[[NSString stringWithCString:ssid encoding:NSUTF8StringEncoding], [NSNumber numberWithShort:rssi], [NSNumber numberWithInt:band], [NSNumber numberWithUnsignedChar:channel]] forKeys:@[JumpingSumoDeviceControllerNetworkStateWifiScanListChangedNotificationSsidKey, JumpingSumoDeviceControllerNetworkStateWifiScanListChangedNotificationRssiKey, JumpingSumoDeviceControllerNetworkStateWifiScanListChangedNotificationBandKey, JumpingSumoDeviceControllerNetworkStateWifiScanListChangedNotificationChannelKey]];
    NSMutableDictionary *listDictionary = [self.privateNotificationsDictionary objectForKey:JumpingSumoDeviceControllerNetworkStateWifiScanListChangedNotification];
    if(listDictionary == nil)
    {
        listDictionary = [NSMutableDictionary dictionary];
    }
    [listDictionary setObject:dict forKey:[NSString stringWithCString:ssid encoding:NSUTF8StringEncoding]];
    dict = listDictionary;
    [self.privateNotificationsDictionary setObject:dict forKey:JumpingSumoDeviceControllerNetworkStateWifiScanListChangedNotification];
    [[NSNotificationCenter defaultCenter] postNotificationName:DeviceControllerNotificationsDictionaryChanged object:self userInfo:[NSDictionary dictionaryWithObject:dict forKey:JumpingSumoDeviceControllerNetworkStateWifiScanListChangedNotification]];
    [[NSNotificationCenter defaultCenter] postNotificationName:JumpingSumoDeviceControllerNetworkStateWifiScanListChangedNotification object:self userInfo:dict];
}

static void jumpingsumo_networkstate_allwifiscanchanged_callback(void *custom)
{
    JumpingSumoDeviceController *self = (__bridge JumpingSumoDeviceController*)custom;
    NSDictionary* dict = [NSDictionary dictionary];
    [self.privateNotificationsDictionary setObject:dict forKey:JumpingSumoDeviceControllerNetworkStateAllWifiScanChangedNotification];
    [[NSNotificationCenter defaultCenter] postNotificationName:DeviceControllerNotificationsDictionaryChanged object:self userInfo:[NSDictionary dictionaryWithObject:dict forKey:JumpingSumoDeviceControllerNetworkStateAllWifiScanChangedNotification]];
    [[NSNotificationCenter defaultCenter] postNotificationName:JumpingSumoDeviceControllerNetworkStateAllWifiScanChangedNotification object:self userInfo:dict];
}

static void jumpingsumo_networkstate_wifiauthchannellistchanged_callback(eARCOMMANDS_JUMPINGSUMO_NETWORKSTATE_WIFIAUTHCHANNELLISTCHANGED_BAND band, uint8_t channel, uint8_t in_or_out, void *custom)
{
    JumpingSumoDeviceController *self = (__bridge JumpingSumoDeviceController*)custom;
    NSDictionary* dict = [NSDictionary dictionaryWithObjects:@[[NSNumber numberWithInt:band], [NSNumber numberWithUnsignedChar:channel], [NSNumber numberWithUnsignedChar:in_or_out]] forKeys:@[JumpingSumoDeviceControllerNetworkStateWifiAuthChannelListChangedNotificationBandKey, JumpingSumoDeviceControllerNetworkStateWifiAuthChannelListChangedNotificationChannelKey, JumpingSumoDeviceControllerNetworkStateWifiAuthChannelListChangedNotificationIn_or_outKey]];
    NSMutableDictionary *listDictionary = [self.privateNotificationsDictionary objectForKey:JumpingSumoDeviceControllerNetworkStateWifiAuthChannelListChangedNotification];
    if(listDictionary == nil)
    {
        listDictionary = [NSMutableDictionary dictionary];
    }
    [listDictionary setObject:dict forKey:[NSNumber numberWithInt:band]];
    dict = listDictionary;
    [self.privateNotificationsDictionary setObject:dict forKey:JumpingSumoDeviceControllerNetworkStateWifiAuthChannelListChangedNotification];
    [[NSNotificationCenter defaultCenter] postNotificationName:DeviceControllerNotificationsDictionaryChanged object:self userInfo:[NSDictionary dictionaryWithObject:dict forKey:JumpingSumoDeviceControllerNetworkStateWifiAuthChannelListChangedNotification]];
    [[NSNotificationCenter defaultCenter] postNotificationName:JumpingSumoDeviceControllerNetworkStateWifiAuthChannelListChangedNotification object:self userInfo:dict];
}

static void jumpingsumo_networkstate_allwifiauthchannelchanged_callback(void *custom)
{
    JumpingSumoDeviceController *self = (__bridge JumpingSumoDeviceController*)custom;
    NSDictionary* dict = [NSDictionary dictionary];
    [self.privateNotificationsDictionary setObject:dict forKey:JumpingSumoDeviceControllerNetworkStateAllWifiAuthChannelChangedNotification];
    [[NSNotificationCenter defaultCenter] postNotificationName:DeviceControllerNotificationsDictionaryChanged object:self userInfo:[NSDictionary dictionaryWithObject:dict forKey:JumpingSumoDeviceControllerNetworkStateAllWifiAuthChannelChangedNotification]];
    [[NSNotificationCenter defaultCenter] postNotificationName:JumpingSumoDeviceControllerNetworkStateAllWifiAuthChannelChangedNotification object:self userInfo:dict];
}

static void jumpingsumo_networkstate_linkqualitychanged_callback(uint8_t quality, void *custom)
{
    JumpingSumoDeviceController *self = (__bridge JumpingSumoDeviceController*)custom;
    NSDictionary* dict = [NSDictionary dictionaryWithObjects:@[[NSNumber numberWithUnsignedChar:quality]] forKeys:@[JumpingSumoDeviceControllerNetworkStateLinkQualityChangedNotificationQualityKey]];
    [self.privateNotificationsDictionary setObject:dict forKey:JumpingSumoDeviceControllerNetworkStateLinkQualityChangedNotification];
    [[NSNotificationCenter defaultCenter] postNotificationName:DeviceControllerNotificationsDictionaryChanged object:self userInfo:[NSDictionary dictionaryWithObject:dict forKey:JumpingSumoDeviceControllerNetworkStateLinkQualityChangedNotification]];
    [[NSNotificationCenter defaultCenter] postNotificationName:JumpingSumoDeviceControllerNetworkStateLinkQualityChangedNotification object:self userInfo:dict];
}

static void jumpingsumo_audiosettingsstate_mastervolumechanged_callback(uint8_t volume, void *custom)
{
    JumpingSumoDeviceController *self = (__bridge JumpingSumoDeviceController*)custom;
    NSDictionary* dict = [NSDictionary dictionaryWithObjects:@[[NSNumber numberWithUnsignedChar:volume]] forKeys:@[JumpingSumoDeviceControllerAudioSettingsStateMasterVolumeChangedNotificationVolumeKey]];
    [self.privateNotificationsDictionary setObject:dict forKey:JumpingSumoDeviceControllerAudioSettingsStateMasterVolumeChangedNotification];
    [[NSNotificationCenter defaultCenter] postNotificationName:DeviceControllerNotificationsDictionaryChanged object:self userInfo:[NSDictionary dictionaryWithObject:dict forKey:JumpingSumoDeviceControllerAudioSettingsStateMasterVolumeChangedNotification]];
    [[NSNotificationCenter defaultCenter] postNotificationName:JumpingSumoDeviceControllerAudioSettingsStateMasterVolumeChangedNotification object:self userInfo:dict];
}

static void jumpingsumo_audiosettingsstate_themechanged_callback(eARCOMMANDS_JUMPINGSUMO_AUDIOSETTINGSSTATE_THEMECHANGED_THEME theme, void *custom)
{
    JumpingSumoDeviceController *self = (__bridge JumpingSumoDeviceController*)custom;
    NSDictionary* dict = [NSDictionary dictionaryWithObjects:@[[NSNumber numberWithInt:theme]] forKeys:@[JumpingSumoDeviceControllerAudioSettingsStateThemeChangedNotificationThemeKey]];
    [self.privateNotificationsDictionary setObject:dict forKey:JumpingSumoDeviceControllerAudioSettingsStateThemeChangedNotification];
    [[NSNotificationCenter defaultCenter] postNotificationName:DeviceControllerNotificationsDictionaryChanged object:self userInfo:[NSDictionary dictionaryWithObject:dict forKey:JumpingSumoDeviceControllerAudioSettingsStateThemeChangedNotification]];
    [[NSNotificationCenter defaultCenter] postNotificationName:JumpingSumoDeviceControllerAudioSettingsStateThemeChangedNotification object:self userInfo:dict];
}

static void jumpingsumo_roadplanstate_scriptmetadatalistchanged_callback(char * uuid, uint8_t version, char * product, char * name, uint64_t lastModified, void *custom)
{
    JumpingSumoDeviceController *self = (__bridge JumpingSumoDeviceController*)custom;
    NSDictionary* dict = [NSDictionary dictionaryWithObjects:@[[NSString stringWithCString:uuid encoding:NSUTF8StringEncoding], [NSNumber numberWithUnsignedChar:version], [NSString stringWithCString:product encoding:NSUTF8StringEncoding], [NSString stringWithCString:name encoding:NSUTF8StringEncoding], [NSNumber numberWithUnsignedLong:lastModified]] forKeys:@[JumpingSumoDeviceControllerRoadPlanStateScriptMetadataListChangedNotificationUuidKey, JumpingSumoDeviceControllerRoadPlanStateScriptMetadataListChangedNotificationVersionKey, JumpingSumoDeviceControllerRoadPlanStateScriptMetadataListChangedNotificationProductKey, JumpingSumoDeviceControllerRoadPlanStateScriptMetadataListChangedNotificationNameKey, JumpingSumoDeviceControllerRoadPlanStateScriptMetadataListChangedNotificationLastModifiedKey]];
    NSMutableDictionary *listDictionary = [self.privateNotificationsDictionary objectForKey:JumpingSumoDeviceControllerRoadPlanStateScriptMetadataListChangedNotification];
    if(listDictionary == nil)
    {
        listDictionary = [NSMutableDictionary dictionary];
    }
    [listDictionary setObject:dict forKey:[NSString stringWithCString:uuid encoding:NSUTF8StringEncoding]];
    dict = listDictionary;
    [self.privateNotificationsDictionary setObject:dict forKey:JumpingSumoDeviceControllerRoadPlanStateScriptMetadataListChangedNotification];
    [[NSNotificationCenter defaultCenter] postNotificationName:DeviceControllerNotificationsDictionaryChanged object:self userInfo:[NSDictionary dictionaryWithObject:dict forKey:JumpingSumoDeviceControllerRoadPlanStateScriptMetadataListChangedNotification]];
    [[NSNotificationCenter defaultCenter] postNotificationName:JumpingSumoDeviceControllerRoadPlanStateScriptMetadataListChangedNotification object:self userInfo:dict];
}

static void jumpingsumo_roadplanstate_allscriptsmetadatachanged_callback(void *custom)
{
    JumpingSumoDeviceController *self = (__bridge JumpingSumoDeviceController*)custom;
    NSDictionary* dict = [NSDictionary dictionary];
    [self.privateNotificationsDictionary setObject:dict forKey:JumpingSumoDeviceControllerRoadPlanStateAllScriptsMetadataChangedNotification];
    [[NSNotificationCenter defaultCenter] postNotificationName:DeviceControllerNotificationsDictionaryChanged object:self userInfo:[NSDictionary dictionaryWithObject:dict forKey:JumpingSumoDeviceControllerRoadPlanStateAllScriptsMetadataChangedNotification]];
    [[NSNotificationCenter defaultCenter] postNotificationName:JumpingSumoDeviceControllerRoadPlanStateAllScriptsMetadataChangedNotification object:self userInfo:dict];
}

static void jumpingsumo_roadplanstate_scriptuploadchanged_callback(eARCOMMANDS_JUMPINGSUMO_ROADPLANSTATE_SCRIPTUPLOADCHANGED_RESULTCODE resultCode, void *custom)
{
    JumpingSumoDeviceController *self = (__bridge JumpingSumoDeviceController*)custom;
    NSDictionary* dict = [NSDictionary dictionaryWithObjects:@[[NSNumber numberWithInt:resultCode]] forKeys:@[JumpingSumoDeviceControllerRoadPlanStateScriptUploadChangedNotificationResultCodeKey]];
    [self.privateNotificationsDictionary setObject:dict forKey:JumpingSumoDeviceControllerRoadPlanStateScriptUploadChangedNotification];
    [[NSNotificationCenter defaultCenter] postNotificationName:DeviceControllerNotificationsDictionaryChanged object:self userInfo:[NSDictionary dictionaryWithObject:dict forKey:JumpingSumoDeviceControllerRoadPlanStateScriptUploadChangedNotification]];
    [[NSNotificationCenter defaultCenter] postNotificationName:JumpingSumoDeviceControllerRoadPlanStateScriptUploadChangedNotification object:self userInfo:dict];
}

static void jumpingsumo_roadplanstate_scriptdeletechanged_callback(eARCOMMANDS_JUMPINGSUMO_ROADPLANSTATE_SCRIPTDELETECHANGED_RESULTCODE resultCode, void *custom)
{
    JumpingSumoDeviceController *self = (__bridge JumpingSumoDeviceController*)custom;
    NSDictionary* dict = [NSDictionary dictionaryWithObjects:@[[NSNumber numberWithInt:resultCode]] forKeys:@[JumpingSumoDeviceControllerRoadPlanStateScriptDeleteChangedNotificationResultCodeKey]];
    [self.privateNotificationsDictionary setObject:dict forKey:JumpingSumoDeviceControllerRoadPlanStateScriptDeleteChangedNotification];
    [[NSNotificationCenter defaultCenter] postNotificationName:DeviceControllerNotificationsDictionaryChanged object:self userInfo:[NSDictionary dictionaryWithObject:dict forKey:JumpingSumoDeviceControllerRoadPlanStateScriptDeleteChangedNotification]];
    [[NSNotificationCenter defaultCenter] postNotificationName:JumpingSumoDeviceControllerRoadPlanStateScriptDeleteChangedNotification object:self userInfo:dict];
}

static void jumpingsumo_roadplanstate_playscriptchanged_callback(eARCOMMANDS_JUMPINGSUMO_ROADPLANSTATE_PLAYSCRIPTCHANGED_RESULTCODE resultCode, void *custom)
{
    JumpingSumoDeviceController *self = (__bridge JumpingSumoDeviceController*)custom;
    NSDictionary* dict = [NSDictionary dictionaryWithObjects:@[[NSNumber numberWithInt:resultCode]] forKeys:@[JumpingSumoDeviceControllerRoadPlanStatePlayScriptChangedNotificationResultCodeKey]];
    [self.privateNotificationsDictionary setObject:dict forKey:JumpingSumoDeviceControllerRoadPlanStatePlayScriptChangedNotification];
    [[NSNotificationCenter defaultCenter] postNotificationName:DeviceControllerNotificationsDictionaryChanged object:self userInfo:[NSDictionary dictionaryWithObject:dict forKey:JumpingSumoDeviceControllerRoadPlanStatePlayScriptChangedNotification]];
    [[NSNotificationCenter defaultCenter] postNotificationName:JumpingSumoDeviceControllerRoadPlanStatePlayScriptChangedNotification object:self userInfo:dict];
}

static void jumpingsumo_speedsettingsstate_outdoorchanged_callback(uint8_t outdoor, void *custom)
{
    JumpingSumoDeviceController *self = (__bridge JumpingSumoDeviceController*)custom;
    NSDictionary* dict = [NSDictionary dictionaryWithObjects:@[[NSNumber numberWithUnsignedChar:outdoor]] forKeys:@[JumpingSumoDeviceControllerSpeedSettingsStateOutdoorChangedNotificationOutdoorKey]];
    [self.privateNotificationsDictionary setObject:dict forKey:JumpingSumoDeviceControllerSpeedSettingsStateOutdoorChangedNotification];
    [[NSNotificationCenter defaultCenter] postNotificationName:DeviceControllerNotificationsDictionaryChanged object:self userInfo:[NSDictionary dictionaryWithObject:dict forKey:JumpingSumoDeviceControllerSpeedSettingsStateOutdoorChangedNotification]];
    [[NSNotificationCenter defaultCenter] postNotificationName:JumpingSumoDeviceControllerSpeedSettingsStateOutdoorChangedNotification object:self userInfo:dict];
}

static void jumpingsumo_mediastreamingstate_videoenablechanged_callback(eARCOMMANDS_JUMPINGSUMO_MEDIASTREAMINGSTATE_VIDEOENABLECHANGED_ENABLED enabled, void *custom)
{
    JumpingSumoDeviceController *self = (__bridge JumpingSumoDeviceController*)custom;
    NSDictionary* dict = [NSDictionary dictionaryWithObjects:@[[NSNumber numberWithInt:enabled]] forKeys:@[JumpingSumoDeviceControllerMediaStreamingStateVideoEnableChangedNotificationEnabledKey]];
    [self.privateNotificationsDictionary setObject:dict forKey:JumpingSumoDeviceControllerMediaStreamingStateVideoEnableChangedNotification];
    [[NSNotificationCenter defaultCenter] postNotificationName:DeviceControllerNotificationsDictionaryChanged object:self userInfo:[NSDictionary dictionaryWithObject:dict forKey:JumpingSumoDeviceControllerMediaStreamingStateVideoEnableChangedNotification]];
    [[NSNotificationCenter defaultCenter] postNotificationName:JumpingSumoDeviceControllerMediaStreamingStateVideoEnableChangedNotification object:self userInfo:dict];
}


- (void)registerJumpingSumoARCommandsCallbacks
{
    // Command class PilotingState
    ARCOMMANDS_Decoder_SetJumpingSumoPilotingStatePostureChangedCallback(jumpingsumo_pilotingstate_posturechanged_callback, (__bridge void *)(self));
    ARCOMMANDS_Decoder_SetJumpingSumoPilotingStateAlertStateChangedCallback(jumpingsumo_pilotingstate_alertstatechanged_callback, (__bridge void *)(self));
    // Command class AnimationsState
    ARCOMMANDS_Decoder_SetJumpingSumoAnimationsStateJumpLoadChangedCallback(jumpingsumo_animationsstate_jumploadchanged_callback, (__bridge void *)(self));
    // Command class SettingsState
    ARCOMMANDS_Decoder_SetJumpingSumoSettingsStateProductGPSVersionChangedCallback(jumpingsumo_settingsstate_productgpsversionchanged_callback, (__bridge void *)(self));
    // Command class MediaRecordState
    ARCOMMANDS_Decoder_SetJumpingSumoMediaRecordStatePictureStateChangedCallback(jumpingsumo_mediarecordstate_picturestatechanged_callback, (__bridge void *)(self));
    ARCOMMANDS_Decoder_SetJumpingSumoMediaRecordStateVideoStateChangedCallback(jumpingsumo_mediarecordstate_videostatechanged_callback, (__bridge void *)(self));
    // Command class NetworkSettingsState
    ARCOMMANDS_Decoder_SetJumpingSumoNetworkSettingsStateWifiSelectionChangedCallback(jumpingsumo_networksettingsstate_wifiselectionchanged_callback, (__bridge void *)(self));
    // Command class NetworkState
    ARCOMMANDS_Decoder_SetJumpingSumoNetworkStateWifiScanListChangedCallback(jumpingsumo_networkstate_wifiscanlistchanged_callback, (__bridge void *)(self));
    ARCOMMANDS_Decoder_SetJumpingSumoNetworkStateAllWifiScanChangedCallback(jumpingsumo_networkstate_allwifiscanchanged_callback, (__bridge void *)(self));
    ARCOMMANDS_Decoder_SetJumpingSumoNetworkStateWifiAuthChannelListChangedCallback(jumpingsumo_networkstate_wifiauthchannellistchanged_callback, (__bridge void *)(self));
    ARCOMMANDS_Decoder_SetJumpingSumoNetworkStateAllWifiAuthChannelChangedCallback(jumpingsumo_networkstate_allwifiauthchannelchanged_callback, (__bridge void *)(self));
    ARCOMMANDS_Decoder_SetJumpingSumoNetworkStateLinkQualityChangedCallback(jumpingsumo_networkstate_linkqualitychanged_callback, (__bridge void *)(self));
    // Command class AudioSettingsState
    ARCOMMANDS_Decoder_SetJumpingSumoAudioSettingsStateMasterVolumeChangedCallback(jumpingsumo_audiosettingsstate_mastervolumechanged_callback, (__bridge void *)(self));
    ARCOMMANDS_Decoder_SetJumpingSumoAudioSettingsStateThemeChangedCallback(jumpingsumo_audiosettingsstate_themechanged_callback, (__bridge void *)(self));
    // Command class RoadPlanState
    ARCOMMANDS_Decoder_SetJumpingSumoRoadPlanStateScriptMetadataListChangedCallback(jumpingsumo_roadplanstate_scriptmetadatalistchanged_callback, (__bridge void *)(self));
    ARCOMMANDS_Decoder_SetJumpingSumoRoadPlanStateAllScriptsMetadataChangedCallback(jumpingsumo_roadplanstate_allscriptsmetadatachanged_callback, (__bridge void *)(self));
    ARCOMMANDS_Decoder_SetJumpingSumoRoadPlanStateScriptUploadChangedCallback(jumpingsumo_roadplanstate_scriptuploadchanged_callback, (__bridge void *)(self));
    ARCOMMANDS_Decoder_SetJumpingSumoRoadPlanStateScriptDeleteChangedCallback(jumpingsumo_roadplanstate_scriptdeletechanged_callback, (__bridge void *)(self));
    ARCOMMANDS_Decoder_SetJumpingSumoRoadPlanStatePlayScriptChangedCallback(jumpingsumo_roadplanstate_playscriptchanged_callback, (__bridge void *)(self));
    // Command class SpeedSettingsState
    ARCOMMANDS_Decoder_SetJumpingSumoSpeedSettingsStateOutdoorChangedCallback(jumpingsumo_speedsettingsstate_outdoorchanged_callback, (__bridge void *)(self));
    // Command class MediaStreamingState
    ARCOMMANDS_Decoder_SetJumpingSumoMediaStreamingStateVideoEnableChangedCallback(jumpingsumo_mediastreamingstate_videoenablechanged_callback, (__bridge void *)(self));
}

- (void)unregisterJumpingSumoARCommandsCallbacks
{
    // Command class PilotingState
    ARCOMMANDS_Decoder_SetJumpingSumoPilotingStatePostureChangedCallback(NULL, NULL);
    ARCOMMANDS_Decoder_SetJumpingSumoPilotingStateAlertStateChangedCallback(NULL, NULL);
    // Command class AnimationsState
    ARCOMMANDS_Decoder_SetJumpingSumoAnimationsStateJumpLoadChangedCallback(NULL, NULL);
    // Command class SettingsState
    ARCOMMANDS_Decoder_SetJumpingSumoSettingsStateProductGPSVersionChangedCallback(NULL, NULL);
    // Command class MediaRecordState
    ARCOMMANDS_Decoder_SetJumpingSumoMediaRecordStatePictureStateChangedCallback(NULL, NULL);
    ARCOMMANDS_Decoder_SetJumpingSumoMediaRecordStateVideoStateChangedCallback(NULL, NULL);
    // Command class NetworkSettingsState
    ARCOMMANDS_Decoder_SetJumpingSumoNetworkSettingsStateWifiSelectionChangedCallback(NULL, NULL);
    // Command class NetworkState
    ARCOMMANDS_Decoder_SetJumpingSumoNetworkStateWifiScanListChangedCallback(NULL, NULL);
    ARCOMMANDS_Decoder_SetJumpingSumoNetworkStateAllWifiScanChangedCallback(NULL, NULL);
    ARCOMMANDS_Decoder_SetJumpingSumoNetworkStateWifiAuthChannelListChangedCallback(NULL, NULL);
    ARCOMMANDS_Decoder_SetJumpingSumoNetworkStateAllWifiAuthChannelChangedCallback(NULL, NULL);
    ARCOMMANDS_Decoder_SetJumpingSumoNetworkStateLinkQualityChangedCallback(NULL, NULL);
    // Command class AudioSettingsState
    ARCOMMANDS_Decoder_SetJumpingSumoAudioSettingsStateMasterVolumeChangedCallback(NULL, NULL);
    ARCOMMANDS_Decoder_SetJumpingSumoAudioSettingsStateThemeChangedCallback(NULL, NULL);
    // Command class RoadPlanState
    ARCOMMANDS_Decoder_SetJumpingSumoRoadPlanStateScriptMetadataListChangedCallback(NULL, NULL);
    ARCOMMANDS_Decoder_SetJumpingSumoRoadPlanStateAllScriptsMetadataChangedCallback(NULL, NULL);
    ARCOMMANDS_Decoder_SetJumpingSumoRoadPlanStateScriptUploadChangedCallback(NULL, NULL);
    ARCOMMANDS_Decoder_SetJumpingSumoRoadPlanStateScriptDeleteChangedCallback(NULL, NULL);
    ARCOMMANDS_Decoder_SetJumpingSumoRoadPlanStatePlayScriptChangedCallback(NULL, NULL);
    // Command class SpeedSettingsState
    ARCOMMANDS_Decoder_SetJumpingSumoSpeedSettingsStateOutdoorChangedCallback(NULL, NULL);
    // Command class MediaStreamingState
    ARCOMMANDS_Decoder_SetJumpingSumoMediaStreamingStateVideoEnableChangedCallback(NULL, NULL);
}

#pragma mark ARCommands sending function 
    // Command class Piloting
- (BOOL)JumpingSumoDeviceController_SendPilotingPCMD:(int)bufferId withSendPolicy:(eARNETWORK_SEND_POLICY)policy withCompletionBlock:(DeviceControllerCompletionBlock)completionBlock withFlag:(uint8_t)flag withSpeed:(int8_t)speed withTurn:(int8_t)turn
{
    u_int8_t cmdbuf[128];
    int32_t actualSize = 0;
    eARCOMMANDS_GENERATOR_ERROR cmdError;
    BOOL sentStatus;

    // Send PCMD command
    sentStatus = NO;
    cmdError = ARCOMMANDS_Generator_GenerateJumpingSumoPilotingPCMD(cmdbuf, sizeof(cmdbuf), &actualSize, flag, speed, turn);
    if (cmdError == ARCOMMANDS_GENERATOR_OK)
    {
        sentStatus = [self sendData:cmdbuf withSize:actualSize onBufferWithId:bufferId withSendPolicy:policy withCompletionBlock:completionBlock];
    }
    if (!sentStatus)
    {
        ARSAL_PRINT(ARSAL_PRINT_ERROR, JumpingSumoDeviceController_TAG, "Failed to send PCMD command.");
    }

    return sentStatus;
}
- (BOOL)JumpingSumoDeviceController_SendPilotingPosture:(int)bufferId withSendPolicy:(eARNETWORK_SEND_POLICY)policy withCompletionBlock:(DeviceControllerCompletionBlock)completionBlock withType:(eARCOMMANDS_JUMPINGSUMO_PILOTING_POSTURE_TYPE)type
{
    u_int8_t cmdbuf[128];
    int32_t actualSize = 0;
    eARCOMMANDS_GENERATOR_ERROR cmdError;
    BOOL sentStatus;

    // Send Posture command
    sentStatus = NO;
    cmdError = ARCOMMANDS_Generator_GenerateJumpingSumoPilotingPosture(cmdbuf, sizeof(cmdbuf), &actualSize, type);
    if (cmdError == ARCOMMANDS_GENERATOR_OK)
    {
        sentStatus = [self sendData:cmdbuf withSize:actualSize onBufferWithId:bufferId withSendPolicy:policy withCompletionBlock:completionBlock];
    }
    if (!sentStatus)
    {
        ARSAL_PRINT(ARSAL_PRINT_ERROR, JumpingSumoDeviceController_TAG, "Failed to send Posture command.");
    }

    return sentStatus;
}
- (BOOL)JumpingSumoDeviceController_SendPilotingAddCapOffset:(int)bufferId withSendPolicy:(eARNETWORK_SEND_POLICY)policy withCompletionBlock:(DeviceControllerCompletionBlock)completionBlock withOffset:(float)offset
{
    u_int8_t cmdbuf[128];
    int32_t actualSize = 0;
    eARCOMMANDS_GENERATOR_ERROR cmdError;
    BOOL sentStatus;

    // Send AddCapOffset command
    sentStatus = NO;
    cmdError = ARCOMMANDS_Generator_GenerateJumpingSumoPilotingAddCapOffset(cmdbuf, sizeof(cmdbuf), &actualSize, offset);
    if (cmdError == ARCOMMANDS_GENERATOR_OK)
    {
        sentStatus = [self sendData:cmdbuf withSize:actualSize onBufferWithId:bufferId withSendPolicy:policy withCompletionBlock:completionBlock];
    }
    if (!sentStatus)
    {
        ARSAL_PRINT(ARSAL_PRINT_ERROR, JumpingSumoDeviceController_TAG, "Failed to send AddCapOffset command.");
    }

    return sentStatus;
}
    // Command class Animations
- (BOOL)JumpingSumoDeviceController_SendAnimationsJumpStop:(int)bufferId withSendPolicy:(eARNETWORK_SEND_POLICY)policy withCompletionBlock:(DeviceControllerCompletionBlock)completionBlock
{
    u_int8_t cmdbuf[128];
    int32_t actualSize = 0;
    eARCOMMANDS_GENERATOR_ERROR cmdError;
    BOOL sentStatus;

    // Send JumpStop command
    sentStatus = NO;
    cmdError = ARCOMMANDS_Generator_GenerateJumpingSumoAnimationsJumpStop(cmdbuf, sizeof(cmdbuf), &actualSize);
    if (cmdError == ARCOMMANDS_GENERATOR_OK)
    {
        sentStatus = [self sendData:cmdbuf withSize:actualSize onBufferWithId:bufferId withSendPolicy:policy withCompletionBlock:completionBlock];
    }
    if (!sentStatus)
    {
        ARSAL_PRINT(ARSAL_PRINT_ERROR, JumpingSumoDeviceController_TAG, "Failed to send JumpStop command.");
    }

    return sentStatus;
}
- (BOOL)JumpingSumoDeviceController_SendAnimationsJumpCancel:(int)bufferId withSendPolicy:(eARNETWORK_SEND_POLICY)policy withCompletionBlock:(DeviceControllerCompletionBlock)completionBlock
{
    u_int8_t cmdbuf[128];
    int32_t actualSize = 0;
    eARCOMMANDS_GENERATOR_ERROR cmdError;
    BOOL sentStatus;

    // Send JumpCancel command
    sentStatus = NO;
    cmdError = ARCOMMANDS_Generator_GenerateJumpingSumoAnimationsJumpCancel(cmdbuf, sizeof(cmdbuf), &actualSize);
    if (cmdError == ARCOMMANDS_GENERATOR_OK)
    {
        sentStatus = [self sendData:cmdbuf withSize:actualSize onBufferWithId:bufferId withSendPolicy:policy withCompletionBlock:completionBlock];
    }
    if (!sentStatus)
    {
        ARSAL_PRINT(ARSAL_PRINT_ERROR, JumpingSumoDeviceController_TAG, "Failed to send JumpCancel command.");
    }

    return sentStatus;
}
- (BOOL)JumpingSumoDeviceController_SendAnimationsJumpLoad:(int)bufferId withSendPolicy:(eARNETWORK_SEND_POLICY)policy withCompletionBlock:(DeviceControllerCompletionBlock)completionBlock
{
    u_int8_t cmdbuf[128];
    int32_t actualSize = 0;
    eARCOMMANDS_GENERATOR_ERROR cmdError;
    BOOL sentStatus;

    // Send JumpLoad command
    sentStatus = NO;
    cmdError = ARCOMMANDS_Generator_GenerateJumpingSumoAnimationsJumpLoad(cmdbuf, sizeof(cmdbuf), &actualSize);
    if (cmdError == ARCOMMANDS_GENERATOR_OK)
    {
        sentStatus = [self sendData:cmdbuf withSize:actualSize onBufferWithId:bufferId withSendPolicy:policy withCompletionBlock:completionBlock];
    }
    if (!sentStatus)
    {
        ARSAL_PRINT(ARSAL_PRINT_ERROR, JumpingSumoDeviceController_TAG, "Failed to send JumpLoad command.");
    }

    return sentStatus;
}
- (BOOL)JumpingSumoDeviceController_SendAnimationsJump:(int)bufferId withSendPolicy:(eARNETWORK_SEND_POLICY)policy withCompletionBlock:(DeviceControllerCompletionBlock)completionBlock withType:(eARCOMMANDS_JUMPINGSUMO_ANIMATIONS_JUMP_TYPE)type
{
    u_int8_t cmdbuf[128];
    int32_t actualSize = 0;
    eARCOMMANDS_GENERATOR_ERROR cmdError;
    BOOL sentStatus;

    // Send Jump command
    sentStatus = NO;
    cmdError = ARCOMMANDS_Generator_GenerateJumpingSumoAnimationsJump(cmdbuf, sizeof(cmdbuf), &actualSize, type);
    if (cmdError == ARCOMMANDS_GENERATOR_OK)
    {
        sentStatus = [self sendData:cmdbuf withSize:actualSize onBufferWithId:bufferId withSendPolicy:policy withCompletionBlock:completionBlock];
    }
    if (!sentStatus)
    {
        ARSAL_PRINT(ARSAL_PRINT_ERROR, JumpingSumoDeviceController_TAG, "Failed to send Jump command.");
    }

    return sentStatus;
}
- (BOOL)JumpingSumoDeviceController_SendAnimationsSimpleAnimation:(int)bufferId withSendPolicy:(eARNETWORK_SEND_POLICY)policy withCompletionBlock:(DeviceControllerCompletionBlock)completionBlock withId:(eARCOMMANDS_JUMPINGSUMO_ANIMATIONS_SIMPLEANIMATION_ID)id
{
    u_int8_t cmdbuf[128];
    int32_t actualSize = 0;
    eARCOMMANDS_GENERATOR_ERROR cmdError;
    BOOL sentStatus;

    // Send SimpleAnimation command
    sentStatus = NO;
    cmdError = ARCOMMANDS_Generator_GenerateJumpingSumoAnimationsSimpleAnimation(cmdbuf, sizeof(cmdbuf), &actualSize, id);
    if (cmdError == ARCOMMANDS_GENERATOR_OK)
    {
        sentStatus = [self sendData:cmdbuf withSize:actualSize onBufferWithId:bufferId withSendPolicy:policy withCompletionBlock:completionBlock];
    }
    if (!sentStatus)
    {
        ARSAL_PRINT(ARSAL_PRINT_ERROR, JumpingSumoDeviceController_TAG, "Failed to send SimpleAnimation command.");
    }

    return sentStatus;
}
    // Command class Settings
    // Command class MediaRecord
- (BOOL)JumpingSumoDeviceController_SendMediaRecordPicture:(int)bufferId withSendPolicy:(eARNETWORK_SEND_POLICY)policy withCompletionBlock:(DeviceControllerCompletionBlock)completionBlock withMass_storage_id:(uint8_t)mass_storage_id
{
    u_int8_t cmdbuf[128];
    int32_t actualSize = 0;
    eARCOMMANDS_GENERATOR_ERROR cmdError;
    BOOL sentStatus;

    // Send Picture command
    sentStatus = NO;
    cmdError = ARCOMMANDS_Generator_GenerateJumpingSumoMediaRecordPicture(cmdbuf, sizeof(cmdbuf), &actualSize, mass_storage_id);
    if (cmdError == ARCOMMANDS_GENERATOR_OK)
    {
        sentStatus = [self sendData:cmdbuf withSize:actualSize onBufferWithId:bufferId withSendPolicy:policy withCompletionBlock:completionBlock];
    }
    if (!sentStatus)
    {
        ARSAL_PRINT(ARSAL_PRINT_ERROR, JumpingSumoDeviceController_TAG, "Failed to send Picture command.");
    }

    return sentStatus;
}
- (BOOL)JumpingSumoDeviceController_SendMediaRecordVideo:(int)bufferId withSendPolicy:(eARNETWORK_SEND_POLICY)policy withCompletionBlock:(DeviceControllerCompletionBlock)completionBlock withRecord:(eARCOMMANDS_JUMPINGSUMO_MEDIARECORD_VIDEO_RECORD)record withMass_storage_id:(uint8_t)mass_storage_id
{
    u_int8_t cmdbuf[128];
    int32_t actualSize = 0;
    eARCOMMANDS_GENERATOR_ERROR cmdError;
    BOOL sentStatus;

    // Send Video command
    sentStatus = NO;
    cmdError = ARCOMMANDS_Generator_GenerateJumpingSumoMediaRecordVideo(cmdbuf, sizeof(cmdbuf), &actualSize, record, mass_storage_id);
    if (cmdError == ARCOMMANDS_GENERATOR_OK)
    {
        sentStatus = [self sendData:cmdbuf withSize:actualSize onBufferWithId:bufferId withSendPolicy:policy withCompletionBlock:completionBlock];
    }
    if (!sentStatus)
    {
        ARSAL_PRINT(ARSAL_PRINT_ERROR, JumpingSumoDeviceController_TAG, "Failed to send Video command.");
    }

    return sentStatus;
}
    // Command class NetworkSettings
- (BOOL)JumpingSumoDeviceController_SendNetworkSettingsWifiSelection:(int)bufferId withSendPolicy:(eARNETWORK_SEND_POLICY)policy withCompletionBlock:(DeviceControllerCompletionBlock)completionBlock withType:(eARCOMMANDS_JUMPINGSUMO_NETWORKSETTINGS_WIFISELECTION_TYPE)type withBand:(eARCOMMANDS_JUMPINGSUMO_NETWORKSETTINGS_WIFISELECTION_BAND)band withChannel:(uint8_t)channel
{
    u_int8_t cmdbuf[128];
    int32_t actualSize = 0;
    eARCOMMANDS_GENERATOR_ERROR cmdError;
    BOOL sentStatus;

    // Send WifiSelection command
    sentStatus = NO;
    cmdError = ARCOMMANDS_Generator_GenerateJumpingSumoNetworkSettingsWifiSelection(cmdbuf, sizeof(cmdbuf), &actualSize, type, band, channel);
    if (cmdError == ARCOMMANDS_GENERATOR_OK)
    {
        sentStatus = [self sendData:cmdbuf withSize:actualSize onBufferWithId:bufferId withSendPolicy:policy withCompletionBlock:completionBlock];
    }
    if (!sentStatus)
    {
        ARSAL_PRINT(ARSAL_PRINT_ERROR, JumpingSumoDeviceController_TAG, "Failed to send WifiSelection command.");
    }

    return sentStatus;
}
    // Command class Network
- (BOOL)JumpingSumoDeviceController_SendNetworkWifiScan:(int)bufferId withSendPolicy:(eARNETWORK_SEND_POLICY)policy withCompletionBlock:(DeviceControllerCompletionBlock)completionBlock withBand:(eARCOMMANDS_JUMPINGSUMO_NETWORK_WIFISCAN_BAND)band
{
    u_int8_t cmdbuf[128];
    int32_t actualSize = 0;
    eARCOMMANDS_GENERATOR_ERROR cmdError;
    BOOL sentStatus;

    // Send WifiScan command
    sentStatus = NO;
    cmdError = ARCOMMANDS_Generator_GenerateJumpingSumoNetworkWifiScan(cmdbuf, sizeof(cmdbuf), &actualSize, band);
    if (cmdError == ARCOMMANDS_GENERATOR_OK)
    {
        sentStatus = [self sendData:cmdbuf withSize:actualSize onBufferWithId:bufferId withSendPolicy:policy withCompletionBlock:completionBlock];
    }
    if (!sentStatus)
    {
        ARSAL_PRINT(ARSAL_PRINT_ERROR, JumpingSumoDeviceController_TAG, "Failed to send WifiScan command.");
    }

    return sentStatus;
}
- (BOOL)JumpingSumoDeviceController_SendNetworkWifiAuthChannel:(int)bufferId withSendPolicy:(eARNETWORK_SEND_POLICY)policy withCompletionBlock:(DeviceControllerCompletionBlock)completionBlock
{
    u_int8_t cmdbuf[128];
    int32_t actualSize = 0;
    eARCOMMANDS_GENERATOR_ERROR cmdError;
    BOOL sentStatus;

    // Send WifiAuthChannel command
    sentStatus = NO;
    cmdError = ARCOMMANDS_Generator_GenerateJumpingSumoNetworkWifiAuthChannel(cmdbuf, sizeof(cmdbuf), &actualSize);
    if (cmdError == ARCOMMANDS_GENERATOR_OK)
    {
        sentStatus = [self sendData:cmdbuf withSize:actualSize onBufferWithId:bufferId withSendPolicy:policy withCompletionBlock:completionBlock];
    }
    if (!sentStatus)
    {
        ARSAL_PRINT(ARSAL_PRINT_ERROR, JumpingSumoDeviceController_TAG, "Failed to send WifiAuthChannel command.");
    }

    return sentStatus;
}
    // Command class AudioSettings
- (BOOL)JumpingSumoDeviceController_SendAudioSettingsMasterVolume:(int)bufferId withSendPolicy:(eARNETWORK_SEND_POLICY)policy withCompletionBlock:(DeviceControllerCompletionBlock)completionBlock withVolume:(uint8_t)volume
{
    u_int8_t cmdbuf[128];
    int32_t actualSize = 0;
    eARCOMMANDS_GENERATOR_ERROR cmdError;
    BOOL sentStatus;

    // Send MasterVolume command
    sentStatus = NO;
    cmdError = ARCOMMANDS_Generator_GenerateJumpingSumoAudioSettingsMasterVolume(cmdbuf, sizeof(cmdbuf), &actualSize, volume);
    if (cmdError == ARCOMMANDS_GENERATOR_OK)
    {
        sentStatus = [self sendData:cmdbuf withSize:actualSize onBufferWithId:bufferId withSendPolicy:policy withCompletionBlock:completionBlock];
    }
    if (!sentStatus)
    {
        ARSAL_PRINT(ARSAL_PRINT_ERROR, JumpingSumoDeviceController_TAG, "Failed to send MasterVolume command.");
    }

    return sentStatus;
}
- (BOOL)JumpingSumoDeviceController_SendAudioSettingsTheme:(int)bufferId withSendPolicy:(eARNETWORK_SEND_POLICY)policy withCompletionBlock:(DeviceControllerCompletionBlock)completionBlock withTheme:(eARCOMMANDS_JUMPINGSUMO_AUDIOSETTINGS_THEME_THEME)theme
{
    u_int8_t cmdbuf[128];
    int32_t actualSize = 0;
    eARCOMMANDS_GENERATOR_ERROR cmdError;
    BOOL sentStatus;

    // Send Theme command
    sentStatus = NO;
    cmdError = ARCOMMANDS_Generator_GenerateJumpingSumoAudioSettingsTheme(cmdbuf, sizeof(cmdbuf), &actualSize, theme);
    if (cmdError == ARCOMMANDS_GENERATOR_OK)
    {
        sentStatus = [self sendData:cmdbuf withSize:actualSize onBufferWithId:bufferId withSendPolicy:policy withCompletionBlock:completionBlock];
    }
    if (!sentStatus)
    {
        ARSAL_PRINT(ARSAL_PRINT_ERROR, JumpingSumoDeviceController_TAG, "Failed to send Theme command.");
    }

    return sentStatus;
}
    // Command class RoadPlan
- (BOOL)JumpingSumoDeviceController_SendRoadPlanAllScriptsMetadata:(int)bufferId withSendPolicy:(eARNETWORK_SEND_POLICY)policy withCompletionBlock:(DeviceControllerCompletionBlock)completionBlock
{
    u_int8_t cmdbuf[128];
    int32_t actualSize = 0;
    eARCOMMANDS_GENERATOR_ERROR cmdError;
    BOOL sentStatus;

    // Send AllScriptsMetadata command
    sentStatus = NO;
    cmdError = ARCOMMANDS_Generator_GenerateJumpingSumoRoadPlanAllScriptsMetadata(cmdbuf, sizeof(cmdbuf), &actualSize);
    if (cmdError == ARCOMMANDS_GENERATOR_OK)
    {
        sentStatus = [self sendData:cmdbuf withSize:actualSize onBufferWithId:bufferId withSendPolicy:policy withCompletionBlock:completionBlock];
    }
    if (!sentStatus)
    {
        ARSAL_PRINT(ARSAL_PRINT_ERROR, JumpingSumoDeviceController_TAG, "Failed to send AllScriptsMetadata command.");
    }

    return sentStatus;
}
- (BOOL)JumpingSumoDeviceController_SendRoadPlanScriptUploaded:(int)bufferId withSendPolicy:(eARNETWORK_SEND_POLICY)policy withCompletionBlock:(DeviceControllerCompletionBlock)completionBlock withUuid:(char *)uuid withMd5Hash:(char *)md5Hash
{
    u_int8_t cmdbuf[128];
    int32_t actualSize = 0;
    eARCOMMANDS_GENERATOR_ERROR cmdError;
    BOOL sentStatus;

    // Send ScriptUploaded command
    sentStatus = NO;
    cmdError = ARCOMMANDS_Generator_GenerateJumpingSumoRoadPlanScriptUploaded(cmdbuf, sizeof(cmdbuf), &actualSize, uuid, md5Hash);
    if (cmdError == ARCOMMANDS_GENERATOR_OK)
    {
        sentStatus = [self sendData:cmdbuf withSize:actualSize onBufferWithId:bufferId withSendPolicy:policy withCompletionBlock:completionBlock];
    }
    if (!sentStatus)
    {
        ARSAL_PRINT(ARSAL_PRINT_ERROR, JumpingSumoDeviceController_TAG, "Failed to send ScriptUploaded command.");
    }

    return sentStatus;
}
- (BOOL)JumpingSumoDeviceController_SendRoadPlanScriptDelete:(int)bufferId withSendPolicy:(eARNETWORK_SEND_POLICY)policy withCompletionBlock:(DeviceControllerCompletionBlock)completionBlock withUuid:(char *)uuid
{
    u_int8_t cmdbuf[128];
    int32_t actualSize = 0;
    eARCOMMANDS_GENERATOR_ERROR cmdError;
    BOOL sentStatus;

    // Send ScriptDelete command
    sentStatus = NO;
    cmdError = ARCOMMANDS_Generator_GenerateJumpingSumoRoadPlanScriptDelete(cmdbuf, sizeof(cmdbuf), &actualSize, uuid);
    if (cmdError == ARCOMMANDS_GENERATOR_OK)
    {
        sentStatus = [self sendData:cmdbuf withSize:actualSize onBufferWithId:bufferId withSendPolicy:policy withCompletionBlock:completionBlock];
    }
    if (!sentStatus)
    {
        ARSAL_PRINT(ARSAL_PRINT_ERROR, JumpingSumoDeviceController_TAG, "Failed to send ScriptDelete command.");
    }

    return sentStatus;
}
- (BOOL)JumpingSumoDeviceController_SendRoadPlanPlayScript:(int)bufferId withSendPolicy:(eARNETWORK_SEND_POLICY)policy withCompletionBlock:(DeviceControllerCompletionBlock)completionBlock withUuid:(char *)uuid
{
    u_int8_t cmdbuf[128];
    int32_t actualSize = 0;
    eARCOMMANDS_GENERATOR_ERROR cmdError;
    BOOL sentStatus;

    // Send PlayScript command
    sentStatus = NO;
    cmdError = ARCOMMANDS_Generator_GenerateJumpingSumoRoadPlanPlayScript(cmdbuf, sizeof(cmdbuf), &actualSize, uuid);
    if (cmdError == ARCOMMANDS_GENERATOR_OK)
    {
        sentStatus = [self sendData:cmdbuf withSize:actualSize onBufferWithId:bufferId withSendPolicy:policy withCompletionBlock:completionBlock];
    }
    if (!sentStatus)
    {
        ARSAL_PRINT(ARSAL_PRINT_ERROR, JumpingSumoDeviceController_TAG, "Failed to send PlayScript command.");
    }

    return sentStatus;
}
    // Command class SpeedSettings
- (BOOL)JumpingSumoDeviceController_SendSpeedSettingsOutdoor:(int)bufferId withSendPolicy:(eARNETWORK_SEND_POLICY)policy withCompletionBlock:(DeviceControllerCompletionBlock)completionBlock withOutdoor:(uint8_t)outdoor
{
    u_int8_t cmdbuf[128];
    int32_t actualSize = 0;
    eARCOMMANDS_GENERATOR_ERROR cmdError;
    BOOL sentStatus;

    // Send Outdoor command
    sentStatus = NO;
    cmdError = ARCOMMANDS_Generator_GenerateJumpingSumoSpeedSettingsOutdoor(cmdbuf, sizeof(cmdbuf), &actualSize, outdoor);
    if (cmdError == ARCOMMANDS_GENERATOR_OK)
    {
        sentStatus = [self sendData:cmdbuf withSize:actualSize onBufferWithId:bufferId withSendPolicy:policy withCompletionBlock:completionBlock];
    }
    if (!sentStatus)
    {
        ARSAL_PRINT(ARSAL_PRINT_ERROR, JumpingSumoDeviceController_TAG, "Failed to send Outdoor command.");
    }

    return sentStatus;
}
    // Command class MediaStreaming
- (BOOL)JumpingSumoDeviceController_SendMediaStreamingVideoEnable:(int)bufferId withSendPolicy:(eARNETWORK_SEND_POLICY)policy withCompletionBlock:(DeviceControllerCompletionBlock)completionBlock withEnable:(uint8_t)enable
{
    u_int8_t cmdbuf[128];
    int32_t actualSize = 0;
    eARCOMMANDS_GENERATOR_ERROR cmdError;
    BOOL sentStatus;

    // Send VideoEnable command
    sentStatus = NO;
    cmdError = ARCOMMANDS_Generator_GenerateJumpingSumoMediaStreamingVideoEnable(cmdbuf, sizeof(cmdbuf), &actualSize, enable);
    if (cmdError == ARCOMMANDS_GENERATOR_OK)
    {
        sentStatus = [self sendData:cmdbuf withSize:actualSize onBufferWithId:bufferId withSendPolicy:policy withCompletionBlock:completionBlock];
    }
    if (!sentStatus)
    {
        ARSAL_PRINT(ARSAL_PRINT_ERROR, JumpingSumoDeviceController_TAG, "Failed to send VideoEnable command.");
    }

    return sentStatus;
}
@end

// END GENERATED CODE
