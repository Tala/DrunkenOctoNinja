####################################################
#       ____ _____                                 #
#      / _  |  __ \        ______  _____   _   _   #
#     / / | | |  \ \      / _____||  __ \ | | / /  #
#    / /__| | |__| |      | |____ | |  \ || |/ /   #
#   / ____  |  __  /      \____  \| |  | ||   |    #
#  / /    | | |  \ \  _   _____| || |__/ || |\ \   #
# /_/     |_|_|   \_\|_|  |______/|____ / |_| \_\  #
#                                                  #
####################################################
#    Installation guide                            #
####################################################

The root folder where all the source code will be downloaded will be noted <SDK>


Important :

Before building the SDK, please run <SDK>/ARSDKBuildUtils/CheckEnv.py script
until it says that your target can be build.



####################################################
#               HOST (UNIX) BUILDS                 #
####################################################
# Linux (Tested on Ubuntu 12.10, 13.04 and 13.10   #
####################################################
# OSX (Tested on 10.9.2 with brew package manager  #
#      http://brew.sh/)                            #
####################################################

# Required external tools.
#  - On linux, install these tools using your favorite package manager
#  - On OSX, you will need XCode to be installed
#  - On OSX, we used brew to install these tools
git, wget, automake, autoconf, libtool, yasm, nasm

# Installation guide
- Download the ARBuildUtils source code
    (cd <SDK>; git clone https://github.com/ARDroneSDK3/ARSDKBuildUtils.git)
- Go in the ARBuildUtils directory
- Run ./SDK3Build.py --help and pick your options
--> A typical command line for HOST build would be :
     ./SDK3Build.py -t Unix
- The output will be in <SDK>/ARBuildUtils/Targets/Unix/Install/.

####################################################
#                 IOS BUILDS                       #
####################################################
# OSX Only ! Tested on 10.9.2 with the same setup  #
#            as the host builds                    #
####################################################

# First, you will need XCode to be correctly installed on your computer.

# Required external tools
#  - Installed using brew
git, wget, automake, autoconf, libtool

# Installation guide
- Download the ARBuildUtils source code
    (cd <SDK>; git clone https://github.com/ARDroneSDK3/ARSDKBuildUtils.git)
- Go in the ARBuildUtils directory
- Run ./SDK3Build.py --help and pick your options
--> A typical command line for HOST build would be :
     ./SDK3Build.py -t iOS
- The output will be in <SDK>/ARSDKBuildUtils/Targets/iOS/Install/.
- The frameworks will be in <SDK>/ARSDKBuildUtils/Targets/iOS/Install/Frameworks


####################################################
#                 ANDROID BUILDS                   #
####################################################
# Tested on Linux (Ubuntu 13.10 and variants)      #
# And OSX (10.9.2 and above)                       #
####################################################

# Required external tools.
#  - On linux, install these tools using your favorite package manager
#  - On OSX, you will need XCode to be installed
#  - On OSX, we used brew to install these tools
git, wget, automake, autoconf, libtool, rpl

On Mac OS you will need to install rpl in version 1.5.5 from sourceforge
 (http://sourceforge.net/projects/rpl/files/rpl/rpl-1.5.5/),
 and add it to your PATH

You also need a working jdk with java 6 (1.6) support

# Required configuration
You must download and install the latest Android SDK and NDK (The SDK is built
 against Android-19 and requires Android-14 runtime).
You must declare environment variables named ANDROID_SDK_PATH and
 ANDROID_NDK_PATH, each pointing to the root of the corresponding dev kit.
You must have the android native toolchains for android-14 in your path.
 To generate a standalone toolchain, use the following command :
$ANDROID_NDK_PATH/build/tools/make-standalone-toolchain.sh --platform=android-14 --arch=<arch> --install-dir=<your/installation/dir>.
 For the three archs `arm', `mips' and `x86'
--> Note that you must use three different installation directories (one for
 each architecture), and you need to add each install_dir/bin directory to your
 path. A typical installation is to have an `~/android_toolchains/' folder, in
 which you will put the three `toolchain_<arch>' folders. This facilitates the
 updates as you can just remove the root folder and generate new toolchains when
 upgrading the android NDK.

# Installation guide
- Download the ARBuildUtils source code
    (cd <SDK>; git clone https://github.com/ARDroneSDK3/ARSDKBuildUtils.git)
- Go in the ARBuildUtils directory
- Run ./SDK3Build.py --help and pick your options
--> A typical command line for HOST build would be :
     ./SDK3Build.py -t Android
- The output will be in <SDK>/ARSDKBuildUtils/Targets/Android/Install/.
- The jar files will be in
    <SDK>/ARSDKBuildUtils/Targets/Android/Install/jars/release
